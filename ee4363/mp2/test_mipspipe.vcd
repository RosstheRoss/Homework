$date
	Fri Dec 18 19:19:39 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test_mipspipe $end
$var reg 1 ! clock $end
$var reg 4 " clock_cycle [3:0] $end
$scope module u_mipspipe_mp2 $end
$var wire 32 # Bin [31:0] $end
$var wire 1 $ STALL $end
$var wire 1 % bypassAfromALUinWB $end
$var wire 1 & bypassAfromLWinWB $end
$var wire 1 ' bypassAfromMEM $end
$var wire 1 ( bypassBfromALUinWB $end
$var wire 1 ) bypassBfromLWinWB $end
$var wire 1 * bypassBfromMEM $end
$var wire 1 + bypassIDEXAfromWB $end
$var wire 1 , bypassIDEXBfromWB $end
$var wire 1 ! clock $end
$var wire 5 - MEMWBrt [4:0] $end
$var wire 5 . MEMWBrd [4:0] $end
$var wire 6 / MEMWBop [5:0] $end
$var wire 5 0 IFIDrt [4:0] $end
$var wire 5 1 IFIDrs [4:0] $end
$var wire 6 2 IFIDop [5:0] $end
$var wire 5 3 IDEXrt [4:0] $end
$var wire 5 4 IDEXrs [4:0] $end
$var wire 6 5 IDEXop [5:0] $end
$var wire 5 6 EXMEMrd [4:0] $end
$var wire 6 7 EXMEMop [5:0] $end
$var wire 32 8 Ain [31:0] $end
$var reg 32 9 EXMEMALUOut [31:0] $end
$var reg 32 : EXMEMB [31:0] $end
$var reg 32 ; EXMEMIR [31:0] $end
$var reg 32 < IDEXA [31:0] $end
$var reg 32 = IDEXB [31:0] $end
$var reg 32 > IDEXIR [31:0] $end
$var reg 32 ? IFIDIR [31:0] $end
$var reg 32 @ MEMWBIR [31:0] $end
$var reg 32 A MEMWBValue [31:0] $end
$var reg 32 B PC [31:0] $end
$var reg 6 C i [5:0] $end
$var reg 11 D j [10:0] $end
$var reg 11 E k [10:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b10000000000 E
b10000000000 D
b100000 C
b0 B
bx A
b100000 @
b100000 ?
b100000 >
bx =
bx <
b100000 ;
bx :
bx 9
bx 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
1,
1+
0*
0)
0(
0'
0&
0%
0$
bx #
b0 "
0!
$end
#5
0+
0,
b10 1
b1 0
b100 B
b10000010010100000100000 ?
b1 "
1!
#10
0!
#15
b10 8
b10 4
b1 3
b1 #
b101 1
b11 0
b100011 2
b10000010010100000100000 >
b1 =
b10 <
b1000 B
b10001100101000110000000000000100 ?
b10 "
1!
#20
0!
#25
1'
b11 8
b101 6
b101 4
b11 3
b100011 5
b11 #
b111 0
b101011 2
b1 :
b10000010010100000100000 ;
b11 9
b10001100101000110000000000000100 >
b11 =
b101 <
b1100 B
b10101100101001110000000000000101 ?
b11 "
1!
#30
0!
#35
0'
b101 .
b1 -
b0 6
b100011 7
b101 8
b111 3
b101011 5
b111 #
b11 1
b0 0
b0 2
b10000010010100000100000 @
b11 A
b11 :
b10001100101000110000000000000100 ;
b111 9
b10101100101001110000000000000101 >
b111 =
b10000 B
b11000000010000000100000 ?
b100 "
1!
#40
0!
#45
1&
b11111111111111111111111111111111 8
b0 .
b11 -
b100011 /
b101011 7
b11 4
b0 3
b0 5
b0 #
b1000 1
b1001 0
b10001100101000110000000000000100 @
b11111111111111111111111111111111 A
b111 :
b10101100101001110000000000000101 ;
b1010 9
b11000000010000000100000 >
b0 =
b11 <
b10100 B
b1000010010011000000100000 ?
b101 "
1!
#50
0!
#55
b1000 8
0&
b111 -
b101011 /
b100 6
b0 7
b1000 4
b1001 3
b1001 #
b0 1
b110 0
b101011 2
b10101100101001110000000000000101 @
b0 :
b11000000010000000100000 ;
b11111111111111111111111111111111 9
b1000010010011000000100000 >
b1001 =
b1000 <
b11000 B
b10101100000001100000000000001100 ?
b110 "
1!
#60
0!
#65
b0 8
b100 .
b0 -
b0 /
b110 6
b0 4
b110 3
b101011 5
b110 #
b110 1
b0 0
b0 2
b11000000010000000100000 @
b1001 :
b1000010010011000000100000 ;
b10001 9
b10101100000001100000000000001100 >
b110 =
b0 <
b11100 B
b110000000101000000100000 ?
b111 "
1!
#70
0!
#75
b110 8
b110 .
b1001 -
b0 6
b101011 7
b110 4
b0 3
b0 5
b0 #
b0 1
b1011 0
b100011 2
b1000010010011000000100000 @
b10001 A
b110 :
b10101100000001100000000000001100 ;
b1100 9
b110000000101000000100000 >
b0 =
b110 <
b100000 B
b10001100000010110000000000010000 ?
b1000 "
1!
#80
0!
#85
0$
b0 8
b0 .
b110 -
b101011 /
b1010 6
b0 7
b0 4
b1011 3
b100011 5
b1011 #
b0 0
b0 2
b10101100000001100000000000001100 @
b0 :
b110000000101000000100000 ;
b110 9
b10001100000010110000000000010000 >
b1011 =
b0 <
b100100 B
b100000 ?
b1001 "
1!
#90
0!
#95
b1010 .
b0 -
b0 /
b0 6
b100011 7
b0 3
b0 5
b0 #
b1 1
b1011 0
b110000000101000000100000 @
b110 A
b1011 :
b10001100000010110000000000010000 ;
b10000 9
b100000 >
b0 =
b101000 B
b1010110110000000100000 ?
b1010 "
1!
#100
0!
#105
b1 8
b0 .
b1011 -
b100011 /
b0 7
b1 4
b1011 3
b1011 #
b0 1
b0 0
b10001100000010110000000000010000 @
b11111111111111111111111111111110 A
b0 :
b100000 ;
b0 9
b1010110110000000100000 >
b1011 =
b1 <
b101100 B
b100000 ?
b1011 "
1!
#110
0!
#115
1+
1,
b0 8
b0 -
b0 /
b1100 6
b0 4
b0 3
b0 #
b100000 @
b0 A
b1011 :
b1010110110000000100000 ;
b1100 9
b100000 >
b0 =
b0 <
b110000 B
b1100 "
1!
#120
0!
#125
0+
0,
b1100 .
b1011 -
b0 6
b1010110110000000100000 @
b1100 A
b0 :
b100000 ;
b0 9
b110100 B
b1101 "
1!
#130
0!
#135
1+
1,
b0 .
b0 -
b100000 @
b0 A
b111000 B
b1110 "
1!
#140
0!
#145
b111100 B
b1111 "
1!
#150
0!
#155
b1000000 B
b0 "
1!
#160
0!
